let g:coc_global_extensions = ['coc-tsserver', 'coc-json', 'coc-html', 'coc-eslint', 'coc-pairs', 'coc-neosnippet', 'coc-git', 'coc-prettier', 'coc-tabnine', 'coc-docker']

" Open CocList
nnoremap <silent> <leader>cl  :<C-u>CocList<cr>

" Show commands
nnoremap <silent> <leader>cc  :<C-u>CocList commands<cr>

" Use <c-space> to trigger completion.
inoremap <silent><expr> <c-space> coc#refresh()

" Remap keys for gotos
nmap <silent> <leader>gd <Plug>(coc-definition)
nmap <silent> <leader>gt <Plug>(coc-type-definition)
nmap <silent> <leader>gi <Plug>(coc-implementation)
nmap <silent> <leader>gr <Plug>(coc-references)

" Remap for rename current word
nmap <leader>rn <Plug>(coc-rename)
nmap <F2> <Plug>(coc-rename)

" Remap for do codeAction of current line (code action)
nmap <leader>ca  <Plug>(coc-codeaction)
" Fix autofix problem of current line (quick fix)
nmap <leader>qf  <Plug>(coc-fix-current)

" Disable pair ` in markdown files
autocmd FileType markdown let b:coc_pairs_disabled = ['`']

" coc-git keymaps
"- <leader>gs: show git chunk info
"- <leader>gc: show commit contain line
nmap <leader>gs <Plug>(coc-git-chunkinfo)
nmap <leader>gc <Plug>(coc-git-commit)
" vim: set syntax=vim:
